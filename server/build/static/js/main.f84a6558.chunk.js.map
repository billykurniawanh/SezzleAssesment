{"version":3,"sources":["component/Calculator.jsx","component/History.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","resultBox","width","marginTop","marginBottom","display","marginLeft","marginRight","textAlign","color","buttonGroup","button","height","margin","Calculator","socket","classes","useState","expression","setExpression","TextField","label","variant","disabled","value","className","ButtonGroup","size","Button","onClick","result","evaluate","emit","err","setTimeout","table","header","History","data","Table","TableHead","TableRow","TableCell","TableBody","map","row","component","scope","socketIOClient","App","history","setHistory","useEffect","on","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f84a6558.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { evaluate } from 'mathjs';\n\nconst useStyles = makeStyles({\n  resultBox: {\n    width: '40vw',\n    marginTop: '2vw',\n    marginBottom: '1vw',\n    display: 'flex',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    textAlign: 'right',\n    color: 'black',\n  },\n  buttonGroup: {\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '40vw',\n  },\n  button: {\n    height: '3vw',\n    width: '8vw',\n    margin: '1vw 1vw 1vw 1vw',\n  },\n});\n\nconst Calculator = ({ socket }) => {\n  const classes = useStyles();\n  const [expression, setExpression] = useState('');\n\n  const evaluateExpression = () => {\n    try {\n      const result = evaluate(expression);\n      socket.emit('newExpression', expression + '=' + result);\n      setExpression(result);\n    } catch (err) {\n      setExpression('ERROR');\n      setTimeout(() => setExpression(''), 1500);\n    }\n  };\n\n  return (\n    <div>\n      <TextField\n        label=\"Result\"\n        variant=\"outlined\"\n        disabled\n        value={expression}\n        className={classes.resultBox}\n      />\n      <ButtonGroup\n        size=\"large\"\n        className={classes.buttonGroup}\n        variant=\"contained\"\n      >\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '(')}\n        >\n          (\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + ')')}\n        >\n          )\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '%')}\n        >\n          %\n        </Button>\n        <Button className={classes.button} onClick={() => setExpression('')}>\n          AC\n        </Button>\n      </ButtonGroup>\n      <ButtonGroup\n        size=\"large\"\n        className={classes.buttonGroup}\n        variant=\"contained\"\n      >\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '7')}\n        >\n          7\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '8')}\n        >\n          8\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '9')}\n        >\n          9\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '/')}\n        >\n          /\n        </Button>\n      </ButtonGroup>\n      <ButtonGroup\n        size=\"large\"\n        className={classes.buttonGroup}\n        variant=\"contained\"\n      >\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '4')}\n        >\n          4\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '5')}\n        >\n          5\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '6')}\n        >\n          6\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '*')}\n        >\n          x\n        </Button>\n      </ButtonGroup>\n      <ButtonGroup\n        size=\"large\"\n        className={classes.buttonGroup}\n        variant=\"contained\"\n      >\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '1')}\n        >\n          1\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '2')}\n        >\n          2\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '3')}\n        >\n          3\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '-')}\n        >\n          -\n        </Button>\n      </ButtonGroup>\n      <ButtonGroup\n        size=\"large\"\n        className={classes.buttonGroup}\n        variant=\"contained\"\n      >\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '0')}\n        >\n          0\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '.')}\n        >\n          .\n        </Button>\n        <Button className={classes.button} onClick={evaluateExpression}>\n          =\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={() => setExpression(expression + '+')}\n        >\n          +\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles({\n  table: {\n    width: '40vw',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: '2vw',\n  },\n  header: {\n    textAlign: 'center',\n  },\n});\n\nconst History = ({ data }) => {\n  const classes = useStyles();\n  return (\n    <Table className={classes.table}>\n      <TableHead>\n        <TableRow>\n          <TableCell className={classes.header}>Calculation History</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {data.map(row => (\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\">\n              {row}\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default History;\n","import React, { useState, useEffect } from 'react';\nimport Calculator from './component/Calculator';\nimport History from './component/History';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(\n  'https://sezzleassesmentbillyhalim.herokuapp.com/',\n);\n\nconst App = () => {\n  const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    socket.on('updateHistory', result => {\n      setHistory(result);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Calculator socket={socket} />\n      <History data={history} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}